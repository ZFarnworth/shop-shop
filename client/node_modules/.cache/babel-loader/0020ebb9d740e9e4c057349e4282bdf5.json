{"ast":null,"code":"import _objectSpread from\"/Users/zacfarnworth/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/zacfarnworth/shop-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Link,useParams}from\"react-router-dom\";import{useQuery}from'@apollo/react-hooks';import{QUERY_PRODUCTS}from\"../utils/queries\";import spinner from'../assets/spinner.gif';// import { useStoreContext } from \"../utils/GlobalState\";\nimport{useDispatch,useSelector}from'react-redux';import{REMOVE_FROM_CART,UPDATE_CART_QUANTITY,ADD_TO_CART,UPDATE_PRODUCTS}from'../utils/actions';import Cart from'../components/Cart';import{idbPromise}from\"../utils/helpers\";function Detail(){var dispatch=useDispatch();var state=useSelector(function(state){return state;});var _useParams=useParams(),id=_useParams.id;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),currentProduct=_useState2[0],setCurrentProduct=_useState2[1];var _useQuery=useQuery(QUERY_PRODUCTS),loading=_useQuery.loading,data=_useQuery.data;var products=state.products,cart=state.cart;var addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});// if we're updating quantity, use existing item data and increment purchaseQuantity value by one\nidbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},currentProduct),{},{purchaseQuantity:1})});// if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\nidbPromise('cart','put',_objectSpread(_objectSpread({},currentProduct),{},{purchaseQuantity:1}));}};var removeFromCart=function removeFromCart(){dispatch({type:REMOVE_FROM_CART,_id:currentProduct._id});// upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\nidbPromise('cart','delete',_objectSpread({},currentProduct));};useEffect(function(){// already in global store\nif(products.length){setCurrentProduct(products.find(function(product){return product._id===id;}));}// retrieved from server\nelse if(data){dispatch({type:UPDATE_PRODUCTS,products:data.products});data.products.forEach(function(product){idbPromise('products','put',product);});}// get cache from idb\nelse if(!loading){idbPromise('products','get').then(function(indexedProducts){dispatch({type:UPDATE_PRODUCTS,products:indexedProducts});});}},[products,data,loading,dispatch,id]);return/*#__PURE__*/React.createElement(React.Fragment,null,currentProduct?/*#__PURE__*/React.createElement(\"div\",{className:\"container my-1\"},/*#__PURE__*/React.createElement(Link,{to:\"/\"},\"\\u2190 Back to Products\"),/*#__PURE__*/React.createElement(\"h2\",null,currentProduct.name),/*#__PURE__*/React.createElement(\"p\",null,currentProduct.description),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,\"Price:\"),\"$\",currentProduct.price,\" \",/*#__PURE__*/React.createElement(\"button\",{onClick:addToCart},\"Add to cart\"),/*#__PURE__*/React.createElement(\"button\",{disabled:!cart.find(function(p){return p._id===currentProduct._id;}),onClick:removeFromCart},\"Remove from Cart\")),/*#__PURE__*/React.createElement(\"img\",{src:\"/images/\".concat(currentProduct.image),alt:currentProduct.name})):null,loading?/*#__PURE__*/React.createElement(\"img\",{src:spinner,alt:\"loading\"}):null,/*#__PURE__*/React.createElement(Cart,null));};export default Detail;","map":{"version":3,"sources":["/Users/zacfarnworth/shop-shop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","QUERY_PRODUCTS","spinner","useDispatch","useSelector","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","Cart","idbPromise","Detail","dispatch","state","id","currentProduct","setCurrentProduct","loading","data","products","cart","addToCart","itemInCart","find","cartItem","_id","type","purchaseQuantity","parseInt","product","removeFromCart","length","forEach","then","indexedProducts","name","description","price","p","image"],"mappings":"qTAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,OAASC,QAAT,KAAyB,qBAAzB,CAEA,OAASC,cAAT,KAA+B,kBAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAEA;AACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,gBADF,CAEEC,oBAFF,CAGEC,WAHF,CAIEC,eAJF,KAKO,kBALP,CAMA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CAEA,OAASC,UAAT,KAA2B,kBAA3B,CAEA,QAASC,CAAAA,MAAT,EAAkB,CAChB,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CACA,GAAMU,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CAAzB,CAFgB,eAGDd,SAAS,EAHR,CAGRe,EAHQ,YAGRA,EAHQ,eAK4BjB,QAAQ,CAAC,EAAD,CALpC,wCAKTkB,cALS,eAKOC,iBALP,6BAOUhB,QAAQ,CAACC,cAAD,CAPlB,CAORgB,OAPQ,WAORA,OAPQ,CAOCC,IAPD,WAOCA,IAPD,IASRC,CAAAA,QATQ,CASWN,KATX,CASRM,QATQ,CASEC,IATF,CASWP,KATX,CASEO,IATF,CAWhB,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,GAAT,GAAiBX,EAA/B,EAAV,CAAnB,CAEA,GAAIQ,UAAJ,CAAgB,CACdV,QAAQ,CAAC,CACPc,IAAI,CAAEpB,oBADC,CAEPmB,GAAG,CAAEX,EAFE,CAGPa,gBAAgB,CAAEC,QAAQ,CAACN,UAAU,CAACK,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKA;AACAjB,UAAU,CAAC,MAAD,CAAS,KAAT,gCACLY,UADK,MAERK,gBAAgB,CAAEC,QAAQ,CAACN,UAAU,CAACK,gBAAZ,CAAR,CAAwC,CAFlD,GAAV,CAID,CAXD,IAWO,CACLf,QAAQ,CAAC,CACPc,IAAI,CAAEnB,WADC,CAEPsB,OAAO,gCAAOd,cAAP,MAAuBY,gBAAgB,CAAE,CAAzC,EAFA,CAAD,CAAR,CAIA;AACAjB,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBK,cAArB,MAAqCY,gBAAgB,CAAE,CAAvD,GAAV,CACD,CACF,CAtBD,CAyBA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BlB,QAAQ,CAAC,CACPc,IAAI,CAAErB,gBADC,CAEPoB,GAAG,CAAEV,cAAc,CAACU,GAFb,CAAD,CAAR,CAKA;AACAf,UAAU,CAAC,MAAD,CAAS,QAAT,kBAAwBK,cAAxB,EAAV,CACD,CARD,CAUAnB,SAAS,CAAC,UAAM,CACd;AACA,GAAIuB,QAAQ,CAACY,MAAb,CAAqB,CACnBf,iBAAiB,CAACG,QAAQ,CAACI,IAAT,CAAc,SAAAM,OAAO,QAAIA,CAAAA,OAAO,CAACJ,GAAR,GAAgBX,EAApB,EAArB,CAAD,CAAjB,CACD,CACD;AAHA,IAIK,IAAII,IAAJ,CAAU,CACbN,QAAQ,CAAC,CACPc,IAAI,CAAElB,eADC,CAEPW,QAAQ,CAAED,IAAI,CAACC,QAFR,CAAD,CAAR,CAKAD,IAAI,CAACC,QAAL,CAAca,OAAd,CAAsB,SAACH,OAAD,CAAa,CACjCnB,UAAU,CAAC,UAAD,CAAa,KAAb,CAAoBmB,OAApB,CAAV,CACD,CAFD,EAGD,CACD;AAVK,IAWA,IAAI,CAACZ,OAAL,CAAc,CACjBP,UAAU,CAAC,UAAD,CAAa,KAAb,CAAV,CAA8BuB,IAA9B,CAAmC,SAACC,eAAD,CAAqB,CACtDtB,QAAQ,CAAC,CACPc,IAAI,CAAElB,eADC,CAEPW,QAAQ,CAAEe,eAFH,CAAD,CAAR,CAID,CALD,EAMD,CACF,CAzBQ,CAyBN,CAACf,QAAD,CAAWD,IAAX,CAAiBD,OAAjB,CAA0BL,QAA1B,CAAoCE,EAApC,CAzBM,CAAT,CA2BA,mBACE,wCACGC,cAAc,cACb,2BAAK,SAAS,CAAC,gBAAf,eACE,oBAAC,IAAD,EAAM,EAAE,CAAC,GAAT,4BADF,cAKE,8BAAKA,cAAc,CAACoB,IAApB,CALF,cAOE,6BACGpB,cAAc,CAACqB,WADlB,CAPF,cAWE,0CACE,2CADF,KAEIrB,cAAc,CAACsB,KAFnB,CAGG,GAHH,cAIE,8BAAQ,OAAO,CAAEhB,SAAjB,gBAJF,cAKE,8BACE,QAAQ,CAAE,CAACD,IAAI,CAACG,IAAL,CAAU,SAAAe,CAAC,QAAIA,CAAAA,CAAC,CAACb,GAAF,GAAUV,cAAc,CAACU,GAA7B,EAAX,CADb,CAEE,OAAO,CAAEK,cAFX,qBALF,CAXF,cAwBE,2BACE,GAAG,mBAAaf,cAAc,CAACwB,KAA5B,CADL,CAEE,GAAG,CAAExB,cAAc,CAACoB,IAFtB,EAxBF,CADa,CA8BX,IA/BN,CAiCIlB,OAAO,cAAG,2BAAK,GAAG,CAAEf,OAAV,CAAmB,GAAG,CAAC,SAAvB,EAAH,CAAyC,IAjCpD,cAmCE,oBAAC,IAAD,MAnCF,CADF,CAuCD,EAED,cAAeS,CAAAA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from '../assets/spinner.gif'\n\n// import { useStoreContext } from \"../utils/GlobalState\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport Cart from '../components/Cart';\n\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({})\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id)\n  \n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  }\n  \n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n  \n    // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n  \n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>Add to cart</button>\n            <button\n              disabled={!cart.find(p => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n</button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}